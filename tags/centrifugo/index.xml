<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Centrifugo on 飞光</title>
    <link>https://rjguanwen.cn/tags/centrifugo/</link>
    <description>Recent content in Centrifugo on 飞光</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 31 Dec 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://rjguanwen.cn/tags/centrifugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Centrifugo（九）使用 Redis 实现伸缩</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_09/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_09/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;Centrifugo 服务器支持多节点部署，并支持对客户端请求的负载均衡。本文中，我们将启动三个 Centrifugo 服务节点来进行演示，这些节点通过 Redis 互相连接。为了达到这个目的，</description>
    </item>
    
    <item>
      <title>Centrifugo（十）令牌和签名</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_10/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_10/</guid>
      <description>Centrifugo 使用具有 SHA-256 摘要算法的 HMAC（Hash-based Message Authentication Code）来创建连接令牌以及对数据进行签名。 &amp;ensp;&amp;ensp;&amp;ensp;&amp;e</description>
    </item>
    
    <item>
      <title>Centrifugo（八）连接检查</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_08/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_08/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;当客户端使用适当的凭据连接到 Centrifugo 后，连接是一直存在的，哪怕你在应用程序中禁止了该用户，他也能从</description>
    </item>
    
    <item>
      <title>Centrifugo（七）Server API</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_07/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_07/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;HTTP API 是最常用的向 Centrifugo 发送指令的一种方式。本文专门讲解 HTTP API。 Centrifugo API 的 url 为 /api/。如果你的 Centrifugo 服务域名是 https://centrifugo.</description>
    </item>
    
    <item>
      <title>Centrifugo（六）引擎（Engines）</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_06/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_06/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;Centrifugo 引擎负责如何发布消息、处理订阅、状态及历史数据的保存及恢复等。Centrifugo 可选的引擎为 Memory 和 Redis，默认使用 Memory。两者最</description>
    </item>
    
    <item>
      <title>Centrifugo（三）安装与启动</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_03/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_03/</guid>
      <description>一、下载安装程序 &amp;ensp;&amp;ensp;Centrifugo 使用 Go 语言开发，GO 语言可以将应用程序编译为单一的二进制执行文件，并且具备交叉编译的能力。因此，Centrifugo 可以方</description>
    </item>
    
    <item>
      <title>Centrifugo（二）基本使用</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_02/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_02/</guid>
      <description>Centrifugo 是一个用 Golang 实现的基于 Websocket 或者 SockJS 的实时通信平台。 基本运行框架： Centrifugo 的使用场景一般涉及三个部分：客户端（前端）、应用程序（后端）和 Centrifu</description>
    </item>
    
    <item>
      <title>Centrifugo（五）频道（Channel）</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_05/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_05/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;频道（Channel）是消息发布的通道。客户端通过订阅频道来接收与频道相关的事件，包括发布到</description>
    </item>
    
    <item>
      <title>Centrifugo（四）配置文件说明</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_04/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_04/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;Centrifugo 支持 JSON、TOML和YAML三种格式的配置文件。本文以 JSON 格式为例说明 Centrifugo 配置文件的内容。最简单的配置文件如下： { &amp;quot;secret&amp;quot;: &amp;quot;very-long-secret-key&amp;quot; } 只有 secret 是必须的，在</description>
    </item>
    
    <item>
      <title>Centrifugo（一）简介</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_01/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_01/</guid>
      <description>Centrifugo 是一个用 Golang 实现的基于 Websocket 或者 SockJS 的实时通信平台。 提供基于频道的发布/订阅（PUB/SUB）模式。 容易和现有系统集成– 不改变已有后端情况下为系统</description>
    </item>
    
  </channel>
</rss>
