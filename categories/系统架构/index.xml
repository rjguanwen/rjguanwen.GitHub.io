<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>系统架构 on 飞光</title>
    <link>https://rjguanwen.cn/categories/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/</link>
    <description>Recent content in 系统架构 on 飞光</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 03 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rjguanwen.cn/categories/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>北极星指标</title>
      <link>https://rjguanwen.cn/posts/tec_ot/omtm/</link>
      <pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/posts/tec_ot/omtm/</guid>
      <description>
        
          
            北极星指标的意义与设定原则 什么是北极星指标 北极星指标也叫唯一关键指标（OMTM，One metric that matters），北极星指标是公司最关键最重要的业务指标，直接承接了公司的战略和发展目标，公司制定的发展目标是否能实现，通过观察北极星指标就可以发现。
之所以取名为北极星指标，是因为它像夜晚的北极星一样，指引公司全体人员朝着制定的同一目标努力，它是指明灯和方向。
北极星指标的设定原则 1、北极星指标应符合SMART原则。 SMART原则（S=Specific、M=Measurable、A=Attainable、R=Relevant、T=Time-bound）
S代表目标必须是具体(Specific)，比如目标定为我要减肥，就不如我要减肥10斤具体; M代表目标是可以衡量的(Measurable)，如果制定的目标都没办法衡量，那跟没有目标没差别; A代表可实现(Attainable)，在付出努力的情况下可以实现，避免设立过高或过低的目标，一般设定的目标是踮踮脚可以达到的； R代表相关性(Relevant），指绩效指标是与工作的其它目标是相关联的，如果公司的每个部门的目标跟公司的总体目标方向不一致的化，就会导致大家不再一个方向上努力; T代表有明确的截止期限(Time-bound); 2、北极星指标是可以拆解的，可以将责任落实到相应的部门。 比如GMV=客单价用户数量购买频次，分别可以由用户运营、用户补贴、用户拉新部门去承接这些子指标。
3、北极星指标不是一成不变的，应该随着公司业务重心的变化而变化。 比如目前的外卖平台关注GMV指标，等规模遭遇瓶颈后，可能就会关注利润了。 比如头条这样的资讯平台，刚开始关注用户规模，等用户规模达到瓶颈后，就开始关注用户停留时长了。
4、北极星指标不是唯一的，且可以引入反向互斥指标互相制衡。 比如外卖和电商公司若一味追求GMV的增长，就容易忽视一个严重的问题，那就是用户退费或退单，从长远来看，对公司发展是非常不利的。
在这种情况下，可引入【退费率】和【GMV】一起作为北极星指标，以避免一味追求高GMV而忽视退费影响公司的长远发展。
北极星指标的几个作用: 北极星指引公司发展方向，所有工作都是由此展开的 北极星指标可以帮助大家明确任务的优先级，不然在公司运营上可能会导致胡子眉毛一把抓，无法集中火力抓住重点 提高行动力，一旦选定你的目标，你只有一件事可以做，努力达到目标。 如何制订北极星指标 如果要公司持续稳健的增长下去，那公司必须首先能提供给用户稳定持续的价值，同时还能保持盈利以进一步驱动公司的良性发展，所以北极星指标应该是用户价值和公司商业目标的交集
6个标准筛选是否是合适的北极星指标 **能够反映用户从产品获得核心价值。**对于一个投资应用，其核心价值就是投资，所以这个北极星指标应该和用户进行投资有关。对于电商应用，给用户的核心价值就是能够买到合适的东西，核心是交易，那北极星指标必须和交易相关，比如GMV、销售额等。对于知乎这类问答社区来说，给用户的价值是得到问题的答案，那北极星指标必须与回答问题有关系。 **能否为产品达到长期商业目标奠定基础。**公司不仅仅要给用户提供价值，公司本身要能赚钱才能保证持续的为用户提供服务，否则一切都是白谈。 **能否反应用户活跃程度。**MySpace以“总注册用户数”作为北极星指标，就是一个累积的静态指标，没有反映出用户当前的活跃程度。 **指标变好，能否预示公司在往好的方向发展。**对于Uber来说，如果只是把注册司机数作为北极星指标，显然就忽略了乘客这一方面，仅仅是注册司机变多而乘客数没有跟上，并不一定说明Uber的生意变好了。因此Uber的北极星指标应该能够反映司机和乘客的供需平衡，因此“总乘车数”就是更为合适的一个指标。 **是否简单，直观，容易获得，可拆解。**比如，“总订单数”就比“订单额超过100元的订单比例”容易理解，也更便于各个团队之间协作和交流。 **是否是先导指标，而非滞后指标。**SaaS公司可能会使用月费收入作为北极星指标，这不是一个坏指标，但是它却是一个滞后指标 几个注意事项 北极星指标并非绝对唯一，很多指标都具有相关性，在公司的一定阶段都可以作为北极星指标 北极星指标代表了公司的战略方向，变动周期应该以年为单位，但可能随着公司的不同发展阶段而变化（探索期：留存率活跃度，成长期：用户增长、总活跃用户数，成熟期：营收利润，付费用户数，衰退期：营收利润，新产品指标 如果发现单一指标不能反映公司的经营情况，可以考虑加入反向指标作为“制衡指标”（电商：北极星指标=GMV，反向指标：退货率） 案例 以交易为主的公司，比如外卖和电商公司（美团、饿了么、天猫、淘宝、京东）等，北极星指标以GMV为主。 以社交为主的公司，比如微信、Facebook等，北极星指标应以用户数量、对话数量和关系数量为主。 以内容分发为主的公司，比如头条、天天快报、腾讯新闻等，北极星指标应以用户数量、阅读文章数量、浏览时长为主。 以工具类为主的公司，如墨迹天气、手机助手等，北极星指标应以打开次数、使用频率为主。 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Gartner战略技术趋势（2021-2023）</title>
      <link>https://rjguanwen.cn/posts/tec_ot/gartner_01/</link>
      <pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/posts/tec_ot/gartner_01/</guid>
      <description>
        
          
            &amp;lt;部分内容借鉴自网络，如有侵权，预先道歉，请及时联系（rjguanwen001@163.com），我会尽快删除，谢谢！&amp;gt;
Gartner战略技术趋势（2021-2023） 一、总览 二、2021年 2.1、技术成熟度曲线 2.2、2021战略技术趋势 2021年的十大战略技术趋势，将主要趋势分为“以人为本”，“位置独立性”和“弹性交付”。 以人为本重视技术影响整个生态系统中利益相关方的方式；重点关注人们的行为，经验和隐私将如何变化。位置独立性关注员工，供应商和客户可以在任何地方工作或者使用产品。新冠大流行加速了远程渠道的使用率。分布式云，无处不在的操作以及新的安全性范式推动了这一需求的发展。弹性交付创建了一个技术组织，该组织可以迅速适应以克服新挑战并支持新的运营。其中包括创建可组合的业务架构，并得到AI工程师和超自动化技术的支持。
2.3、行为互联网（Internet of Behaviors） 行为互联网（IoB）不断涌现，许多技术都在捕获并使用人们日常生活中的“数字尘埃”。IoB汇集了面部识别、位置跟踪和大数据等当前直接关注个人的技术，并将结果数据与现金购买或设备使用等相关的行为事件相关联。
企业机构使用该数据来影响人的行为。例如为了在疫情期间监控对健康规定的遵守情况，企业机构可以通过使用IoB计算机视觉来查看员工是否戴着口罩或通过热成像来识别发热者。
Gartner预测，到2025年末，全球一半以上的人口将至少参加一项商业或政府的IoB计划。虽然IoB在技术上可成为可能，但社会各界将对各种影响行为的方法展开广泛的伦理和社会学讨论。
2.4、全面体验（Total Experience） Burke表示：“去年，Gartner将多重体验定义为一种重要的战略科技趋势。而在今年，这一趋势又进一步发展成为全面体验（TX），将多重体验与客户、员工和用户体验相联系。Gartner预计在未来三年中，提供TX的企业机构在关键满意度指标方面的表现将超越竞争对手。”
由于新冠疫情，移动、虚拟和分布式互动日益盛行，因此企业机构需要有TX策略。TX将改善体验的各个组成部分，实现业务成果的转型。这些相互交织的体验是企业运用创新革命性体验实现差异化，从而从疫情中恢复的关键驱动力。
2.5、隐私增强计算（Privacy-Enhancing Computation） 随着全球数据保护法规的成熟，各地区首席信息官所面临的隐私和违规风险超过了以往任何时候。不同于常见的静态数据安全控制，隐私增强计算可在确保保密性或隐私的同时，保护正在使用的数据。
Gartner认为，到2025年将有一半的大型企业机构使用隐私增强计算在不受信任的环境和多方数据分析用例中处理数据。企业机构应在开始确认隐私增强计算候选对象时，评估要求个人数据转移、数据货币化、欺诈分析和其他高度敏感数据用例的数据处理活动。
2.6、分布式云（Distributed Cloud） 分布式云将公有云分布到不同的物理位置，但服务的运营、治理和发展依然由公有云提供商负责。它为具有低延迟、降低数据成本需求和数据驻留要求的企业机构方案提供了一个灵活的环境，同时还使客户的云计算资源能够更靠近发生数据和业务活动的物理位置。
到2025年，大多数云服务平台至少都能提供一些可以根据需要执行的分布式云服务。Burke先生认为：“分布式云可以取代私有云，并为云计算提供边缘云和其他新用例。它代表了云计算的未来。”
2.7、随处运营（Anywhere Operations） 随处运营是一种为全球各地客户提供支持、赋能全球各地员工并管理各类分布式基础设施业务服务部署的IT运营模式。它所涵盖的不仅仅是在家工作或与客户进行虚拟互动，还能提供所有五个核心领域的独特增值体验，分别是：协作和生产力、安全远程访问、云和边缘基础设施、数字化体验量化以及远程运营自动化支持。
到2023年末，40%的企业机构将通过随处运营提供经过优化与混合的虚拟/物理客户与员工体验。
2.8、网络安全网格（Cybersecurity Mesh） 网络安全网格使任何人都可以安全地访问任何数字资产，无论资产或人员位于何处。它通过云交付模型解除策略执行与策略决策之间的关联，并使身份验证成为新的安全边界。到2025年，网络安全网格将支持超过一半的数字访问控制请求。
Burke先生认为：“新冠疫情加快了耗时数十年的数字化企业变革过程。我们已经越过了一个转折点，大多数企业机构的网络资产现在都已超出传统的物理和逻辑安全边界。随着随处运营的不断发展，网络安全网状组网将成为从非受控设备安全访问和使用云端应用与分布式数据的最实用方法。”
2.9、组装式智能企业（Intelligent Composable Business） Burke先生表示：“为了提高效率而建立的静态业务流程非常脆弱，因此在疫情的冲击下变得支离破碎。首席信息官和IT领导者正在努力收拾残局，他们开始了解适应业务变化速度的业务能力有多么重要。”
智能组合型业务通过获取更好的信息并对此做出更敏锐的响应来彻底改变决策。依靠丰富的数据和洞见，未来的机器将具有更强大的决策能力。智能组合型业务将为重新设计数字化业务时刻、新业务模式、自主运营和新产品、各类服务及渠道铺平道路。
2.10、人工智能工程化（AI Engineering） Gartner的研究表明，只有53%的项目能够从人工智能（AI）原型转化为生产。首席信息官和IT领导者发现，由于缺乏创建和管理生产级人工智能管道的工具，人工智能项目的扩展难度很大。为了将人工智能转化为生产力，就必须转向人工智能工程化这门专注于各种人工智能操作化和决策模型（例如机器学习或知识图）治理与生命周期管理的学科。
人工智能工程化立足于三大核心支柱：数据运维、模型运维和开发运维。强大的人工智能工程化策略将促进人工智能模型的性能、可扩展性、可解释性和可靠性，完全实现人工智能投资的价值。
2.11、超级自动化（Hyperautomation） 业务驱动型超级自动化是一项可用于快速识别、审查和自动执行大量获准业务和IT流程的严格方法。在过去几年中，超级自动化一直在持续不断地发展。而因为疫情，一切事物都被突然要求首先实现数字化，这大大增加了市场的需求。业务利益相关者所积压的需求已促使70%以上的商业机构实施了数十种超级自动化计划。
Burke先生表示：“超级自动化是一股不可避免且不可逆转的趋势。一切可以而且应该被自动化的事物都将被自动化。”
三、2022年 3.1、技术成熟度曲线 3.2、2022战略技术趋势 10 月 19 日，Gartner 发布了 2022 年重要战略技术趋势，包括生成式人工智能、数据编织、分布式企业、云原生平台、自治系统、决策智能、组装式应用程序、超级自动化、隐私增强计算、网络安全网格、人工智能工程化、全面体验等十二项技术。
3.3、主题一、工程化信任 工程化信任（Engineering Trust），本质上是为了构建一个安全可靠的数据处理基础设施，它为数字经济夯实数据基础。
3.3.1、数据编织（Data Fabric） 在过去的十年里，数据和应用孤岛的数量激增，而数据和分析（D&amp;amp;A）团队的技能型人才数量却保持不变，甚至下降。如何把企业的数据整合起来、编织起来，是数据编织想要解决的问题。
数据编织是一种新型的数据管理设计理念。作为一种跨平台和业务用户的灵活、弹性数据整合方式，数据编织能够简化企业机构的数据、整合基础设施并创建一个可扩展数据架构来减少大多数数据和分析团队因整合难度上升而出现的技术债务。这个数据架构里包括的数据元素，可以是传统的关系型数据库，也可以是非结构化数据库、数据湖、云数据库等。
从业务的角度看，数据编织是指，现在很多企业在拥有大量离散数据的情况下如何用一套新的架构把不同的数据连接起来，并对应真实世界中的业务场景。
数据编织的真正价值在于它能够通过内置的分析技术动态改进数据的使用，使数据管理工作量减少 70% 并加快价值实现时间。
3.3.2、网络安全网格（Cybersecurity Mesh） Groombridge 表示：“数据贯穿了今年的许多趋势，但只有当企业能够信任数据时，数据才会变得有用。如今，资产和用户可能出现在任何地方，这意味着传统的安全边界已经消失。这就需要有网络安全网格架构（CSMA）。”
          
          
        
      </description>
    </item>
    
    <item>
      <title>组装式应用思考</title>
      <link>https://rjguanwen.cn/posts/tec_ot/pbc_01/</link>
      <pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/posts/tec_ot/pbc_01/</guid>
      <description>
        
          
            什么是组装式应用? 组装式应用被Gartner连续两年列为重要战略技术趋势。
之所以“组装式应用”能够成为近年来的重要战略技术趋势，究其原因是，由于互联网已经进入“下半场”，靠“堆人力”的研发方式已经不再具备竞争力了，真正可行且有效的方式是让系统能力变得可沉淀、可组合复用、可灵活应对各种变化。面对不断变化的业务环境、快速迭代的业务需求，急需通过组装式应用来提升企业的竞争力。
那么什么是组装式应用呢？
“组装式应用由以业务为中心的模块化组件构成，具备更易使用和可重复使用的代码，可加速新软件解决方案的上市时间，并释放企业价值。”
“组装式应用”可以理解为一种技术理念，倡导的是任何企业数字化技术元素均可被组合。组装式应用协力为企业提供更灵活的组装式部件，帮助企业应对不同环境带来的挑战，让企业更具韧性和抗风险能力。
组装式应用是由一系列的“封装业务能力”（Packaged Business Capability，简称PBC）组成的。PBC是封装好的软件组件，代表定义良好的业务功能，业务用户可快速识别，并可对外开放API接口。PBC并没有规定的大小、功能范围或内部体系结构，但PBC只有在实现了模块化、可发现、自主和可编排（集成）的特征后才是有价值的。换句话说，封装好的业务能力，必须是独立的，对某类受众能体现出业务或技术价值。
组装式应用的价值 个人认为，组装式应用在两个方面有较大的意义：
面向企业的价值，通过组装式应用的方式，可以重构企业的信息化架构，可以用搭积木的方式快速构建新型应用，为业务的快速变化提供敏捷的信息化支撑。这个可以看成是微服务的一个升级。 面向软件开发商的价值，特别是像我们这样的，面向某个行业的软件开发商。通过这种模式，可以打造多行业相对通用的软件体系，方便在具体行业、具体企业时，快速定制开发个性化软件。
接下来的论述主要针对第二种情况。 组装式应用与低代码平台的关系 组装式应用与低代码平台关系非常密切，可以认为低代码平台应该是组装式应用架构里面很重要的一个组成部分。但是，从两者的定位来看，还是有明显差别的。
组装式应用的核心是对业务的抽象，它的每一个PBC都有具体的业务含义与业务目标，甚至包含业务动作。而低代码平台的核心是提供了可复用的技术组件，业务人员可以用这些技术组之间来拼装成业务功能来支撑具体业务的开展。两者虽然都是为了敏捷开发，但是出发点是有巨大差异。
为什么说低代码平台是组装式应用架构的重要组成部分呢？关键在于两者虽然有差异，但是其互补性也非常强。两者一个注重技术一个注重业务，通过低代码的理念来实现PBC的组装，可以更高效、更精确的实现业务诉求。
组装式应用的实现设想 1、组装式应用的底座 所谓组装式应用的底座，就像汽车底盘一样，它是一个承载平台。同一个汽车底盘，通过配置不同的动力总成、车身、内饰、空调电子等，可以生产制造各种不同系列的汽车，例如：速腾、高尔夫、奥迪TT就都是基于PQ35平台研发生产的。组装式应用的底座应该也有同样的功效，它可以承载各种不同的PBC，为不同的行业、不同的企业构建出个性化十足的应用系统。
个人认为组装式应用的底座应该就是企业数字中台，精确的来说就是业务中台+数据中台。数字中台天生具有成为底座资质，因为它本身就是对业务的抽象，可以为各个PBC提供稳定的原子服务，同时也为各PBC之间的连接提供了服务、流程与数据方面的保障。所以，数字中台的建设是组装式应用架构建设的基础。以快消品行业为例，我们要建设一套能适应多个快消品行业的组装式应用系统，那么我们首先要建设一个面向快消品领域且提出了具体行业属性的数字中台，基于这套中台，来构建面向各种具体业务的PBC，通过PBC的组装形成面向具体快消品行业（如烟、酒）的业务应用。
2、PBC的形态 关于PBC到底长啥样，应该以什么技术支持、以什么形态存在，这个暂时没有唯一正确的回答。我想，PBC应该是是分不同种类的，我将其分为三类：业务服务类、功能组件类、应用模块类。
2.1、业务服务类 业务服务类PBC以Rest服务的形式存在，包括数字中台的原子服务、通过中台原子服务封装的业务能力服务以及自定义服务。前两者很好理解，自定义服务是特指通过服务定义平台用SQL的方式生产的服务。自定义服务的特殊之处在于，它所连接的数据库可能不是中台这样的稳定的数据库，可能是归属于某一个应用的数据库。这样它的可用性要以该应用的在用为基础。这是需要在PBC管理上需要注意的。
2.2、功能组件类 功能组件类PBC以web组件或页面组件的形式存在，举两个例子有助于理解：一是客户漏斗，它在系统里面可能表现为一个弹出框，但是它是具有一定的业务含义的。首先它要受到登录用户的数据权限控制，另外它也会收到上级页面上一些参数与选择条件的控制，最后它本身也集成了一些相关的能力，如基于标签、分类分档、经营情况的筛选等；二是订单明细，它在系统里面可能表现为一个设置一系列的页面组合。在业务系统中，每个显示了订单号的地方，都能将其挂载上去，用户客户虽然进入查看其明细设置统计信息；三是客户档案，客户档案除了包括客户的基本信息之外，可能还会包括客户画像、客户经营情况、客户诚信情况等等，与订单明细一样，它也可以提炼为一个PBC，在系统里面广泛应用。功能类组件在引入时应该提供相应的参数配置能力，以保证其适应性。
2.3、应用模块类 应用模块类BPC比功能组件类更高了一个层次，它应该是以容器封装的微应用为主要形态。这类BPC的特点是具有相对高的业务通用性。例如问卷调查，它本身有足够高的可配置性，同时又有足够的通用性，这就可以抽象为一个BPC。各业务系统需要时，可以直接将其引入系统，需要重点考虑的是该组件与业务系统其他模块之间的互通问题，例如调查范围的选择可能要和系统中的客户、组织机构等打通；调查的结果可能要和具体的业务打通。
3、PBC研发管控平台 只有好的管理才能有好的复用。PBC研发管控平台包括PBC定义、设计、发布、停用等生命周期管理及分类管理、引用管理等内容。具体不再详述。目标是最大限度的方便PBC在各业务系统中复用。
4、总体架构图 
          
          
        
      </description>
    </item>
    
    <item>
      <title>架构决策记录（ADR）</title>
      <link>https://rjguanwen.cn/posts/tec_ot/adr/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/posts/tec_ot/adr/</guid>
      <description>
        
          
            什么是ADR ADR（Architecture Decision Records）即架构决策记录。
架构决策（AD）是一种软件设计选择，针对功能性或非功能性的需求进行的选择设计。软件架构决策需要在软件质量属性、成本、时间以及其他各种因素之间，做出正确的权衡。架构决策记录（ADR） 是跟踪软件设计选择的一种方法，其应能向项目经理、架构师、开发人员及软件的其他利益相关者，清楚阐明选择何种解决方案以及为此做出的权衡。
架构决策记录记啥？ 架构决策记录（ADR）首先要解决的基本问题：“我们做了什么决策？”、“为什么这样决策？”，稍次要的问题包括：“我们还考虑过哪些解决方案？”、“为什么没有采用？”等。
架构决策记录的作用 可以作为和开发人员进行沟通的工具，说明应遵循的重要架构原则 当开发人员对架构背后的逻辑提出质疑时，使团队成员能够“就事论事”，提高效率。（如果事实表明你的决策站不住脚，便应虚心接受批评，改正架构） 向领导和利益相关者说明这样构建软件的确切原因（比如，采用某种较为昂贵的硬件或软件的必要性等） 要把项目移交给下任架构师时，保持架构设计的有序传承 如果相关条件发生变化，需要对决策重新评估时，它可以作为一个起点 架构决策记录也会倒逼架构师在进行架构决策时更严谨，有助于确保基础的扎实稳固 架构决策记录的组成部分 每个架构决策至少有 6 部分组成：标题、时间、状态（Status）、上下文（Context）、决策（Decision）、后果（Consequences）。
标题：按数字顺序编号，简要描述架构决策内容
时间：在标题下一行，记录架构决策做出的日期，如 日期：2020年2月28日
状态：表示本架构决策当前所处的状态，可选项包括：
提议：决策已被提出讨论，但是利益相关方尚未达成一致。 公认：决策已讨论通过并达成一致。 已取代：因条件变化，已有新的架构决策取代本决策。此时需要给出新决策链接。 已弃用：本架构决策已撤销，不再使用。 上下文：架构决策相关的背景及决策原因。本部分的语言应该是价值中立的，只用于描述事实
决策：本部分简洁明了的描述我们最终确定的架构决策
后果：本部分描述应用决策后产生的影响，所有的影响都应该列在这里，包括“积极的”、“中性的”与消极的”
其他关键问题 架构决策按照顺序和数字编号，不要打乱顺序。
已记录的架构决策不应该被删除，如果被取代掉或已不符合当前情况，请将其标记为 已取代 或 已弃用
一个架构决策记录示例 1. 使用 ssh key 替换用户名密码方式登录日期: 2019年11月12日状态：公认上下文：当前我们使用的是用户名、密码方式进行服务器登录，存在以下问题安全性问题，密码面临被破解的风险；易用性问题，无法使用 config 记录密码，可以使用第三方软件解决，如，SecureCRT，ZOC7；无法充分使用 local terminal，如 iTerm2；参考:SSH: passwords or keys? https://lwn.net/Articles/369703/Why is SSH key authentication better than password authentication?
          
          
        
      </description>
    </item>
    
    <item>
      <title>数据加解传输过程</title>
      <link>https://rjguanwen.cn/posts/tec_ot/data_translet_safely/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/posts/tec_ot/data_translet_safely/</guid>
      <description>
        
          
            数据传输加密流程：
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
