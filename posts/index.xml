<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>文章 on 飞光</title>
    <link>https://rjguanwen.cn/posts/</link>
    <description>Recent content in 文章 on 飞光</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 18 Dec 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://rjguanwen.cn/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Centrifugo（七）Server API</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_07/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_07/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;HTTP API 是最常用的向 Centrifugo 发送指令的一种方式。本文专门讲解 HTTP API。 Centrifugo API 的 url 为 /api/。如果你的 Centrifugo 服务域名是 https://centrifugo.</description>
    </item>
    
    <item>
      <title>Centrifugo（六）引擎（Engines）</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_06/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_06/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;Centrifugo 引擎负责如何发布消息、处理订阅、状态及历史数据的保存及恢复等。Centrifugo 可选的引擎为 Memory 和 Redis，默认使用 Memory。两者最</description>
    </item>
    
    <item>
      <title>上传本地文件到git</title>
      <link>https://rjguanwen.cn/2019/12/git_02/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/git_02/</guid>
      <description>1、创建本地仓库 cd 到相应文件夹 仓库初始化： git init 将文件添加到仓库： git add . 提交文件到仓库： git commit -m &amp;quot;xxxxxxx&amp;quot; 2、关联 github 仓库 添加远程仓库： git remote add origin https://github.com/rjguanwen/xxxx.git 合并本地</description>
    </item>
    
    <item>
      <title>Centrifugo（三）安装与启动</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_03/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_03/</guid>
      <description>一、下载安装程序 &amp;ensp;&amp;ensp;Centrifugo 使用 Go 语言开发，GO 语言可以将应用程序编译为单一的二进制执行文件，并且具备交叉编译的能力。因此，Centrifugo 可以方</description>
    </item>
    
    <item>
      <title>Centrifugo（二）基本使用</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_02/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_02/</guid>
      <description>Centrifugo 是一个用 Golang 实现的基于 Websocket 或者 SockJS 的实时通信平台。 基本运行框架： Centrifugo 的使用场景一般涉及三个部分：客户端（前端）、应用程序（后端）和 Centrifu</description>
    </item>
    
    <item>
      <title>Centrifugo（五）频道（Channel）</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_05/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_05/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;频道（Channel）是消息发布的通道。客户端通过订阅频道来接收与频道相关的事件，包括发布到</description>
    </item>
    
    <item>
      <title>Centrifugo（四）配置文件说明</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_04/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_04/</guid>
      <description>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;Centrifugo 支持 JSON、TOML和YAML三种格式的配置文件。本文以 JSON 格式为例说明 Centrifugo 配置文件的内容。最简单的配置文件如下： { &amp;quot;secret&amp;quot;: &amp;quot;very-long-secret-key&amp;quot; } 只有 secret 是必须的，在</description>
    </item>
    
    <item>
      <title>Centrifugo（一）简介</title>
      <link>https://rjguanwen.cn/2019/12/centrifugo_01/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/12/centrifugo_01/</guid>
      <description>Centrifugo 是一个用 Golang 实现的基于 Websocket 或者 SockJS 的实时通信平台。 提供基于频道的发布/订阅（PUB/SUB）模式。 容易和现有系统集成– 不改变已有后端情况下为系统</description>
    </item>
    
    <item>
      <title>坚持好习惯</title>
      <link>https://rjguanwen.cn/2019/11/good_habits/</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/11/good_habits/</guid>
      <description>摘抄并总结几条个人认为对提升自我帮助较大的好习惯，希望能坚持！ &amp;lt;部分内容摘抄自网络，如有侵权，预先道歉，请及时联系（rjguanwen</description>
    </item>
    
    <item>
      <title>数据加解传输过程</title>
      <link>https://rjguanwen.cn/2019/11/data_translet_safely/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/11/data_translet_safely/</guid>
      <description>数据传输加密流程：</description>
    </item>
    
    <item>
      <title>gomod使用记录</title>
      <link>https://rjguanwen.cn/2019/11/gomod_use/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/11/gomod_use/</guid>
      <description>简单记录 go mod 的使用方式： 代理配置 $env:GOPROXY = &amp;quot;https://goproxy.io&amp;quot; 或使用 goproxy.cn 初始化 go mod init ***，***为你要创建的mod名字，直接为工程名即可 自动下载依赖 go run *****.</description>
    </item>
    
    <item>
      <title>govendor使用记录</title>
      <link>https://rjguanwen.cn/2019/11/govendor_use/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/11/govendor_use/</guid>
      <description>简单记录 govendor 的使用方式： 安装 go get -u -v github.com/kardianos/govendor 初始化 vendor 目录 govendor init 添加依赖包到 vendor 目录 govendor add +external 或 govendor add +e 从 $GOPATH 更新依赖包到 vendor 目录 govendor update +vendor 删除依赖包 govendor remove +vendor 常用的命令如</description>
    </item>
    
    <item>
      <title>git错误解决</title>
      <link>https://rjguanwen.cn/2019/11/git_01/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/11/git_01/</guid>
      <description>pull仓库时：refusing to merge unrelated histories 问题原因： 在远端已经建立好了仓库，在本地又 init 了一个仓库，然后使用 git remote add origin xxxxx 添加远端，之后进行pull</description>
    </item>
    
    <item>
      <title>关于产品与技术的一些想法</title>
      <link>https://rjguanwen.cn/2019/11/any_01/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/11/any_01/</guid>
      <description>技术的发展非常迅速，对新技术的探索与应用和</description>
    </item>
    
    <item>
      <title>杂句摘抄</title>
      <link>https://rjguanwen.cn/2019/11/somewords_01/</link>
      <pubDate>Tue, 19 Nov 2019 18:13:06 +0800</pubDate>
      
      <guid>https://rjguanwen.cn/2019/11/somewords_01/</guid>
      <description>1.读书不是为了雄辩与驳斥，也不是为了轻信与盲从，而是为了思考和权衡。很多人觉得他们在思考，而实际上他们是在重新整理自己的偏见。 2.用一套程</description>
    </item>
    
    <item>
      <title>苦昼短</title>
      <link>https://rjguanwen.cn/2019/11/art-1/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rjguanwen.cn/2019/11/art-1/</guid>
      <description>苦昼短 【唐】李贺 飞光飞光，劝尔一杯酒。 吾不识青天高，黄地厚。 唯见月寒日暖，来煎人寿。 食熊则肥，食蛙则瘦。 神君何在？太一安有？ 天东有若木，下置</description>
    </item>
    
  </channel>
</rss>
